{
  "name": "Slack Genie Workflow",
  "nodes": [
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.status }}",
              "operation": "notEqual",
              "value2": "timeout"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        64,
        784
      ],
      "id": "b1ea0223-c91b-4db0-9d1d-cfc5293d0b09",
      "name": "Check Timeout"
    },
    {
      "parameters": {
        "amount": "={{ $json.waitTimeInSeconds }}"
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        288,
        928
      ],
      "id": "cfd96cd5-b68b-4b7c-859a-11bd23afcf43",
      "name": "Wait Backoff",
      "webhookId": "32902320-46ac-4317-9932-5372f94f23f2"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "name": "retryCount",
              "value": 0,
              "type": "number"
            },
            {
              "name": "initialDelay",
              "value": 5,
              "type": "number"
            },
            {
              "name": "maxDelay",
              "value": 60,
              "type": "number"
            },
            {
              "name": "totalElapsed",
              "value": 0,
              "type": "number"
            },
            {
              "name": "maxTotal",
              "value": 600,
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2000,
        672
      ],
      "id": "64404b0f-08df-48e7-af66-637e6fc0b2c3",
      "name": "Set Backoff Params"
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "const retryCount = $(\"Set Backoff Params\").item.json.retryCount || 0;\nconst initialDelay = $(\"Set Backoff Params\").item.json.initialDelay || 5;\nconst maxDelay = $(\"Set Backoff Params\").item.json.maxDelay || 60;\nconst totalElapsed = $(\"Set Backoff Params\").item.json.totalElapsed || 0;\nconst maxTotal = $(\"Set Backoff Params\").item.json.maxTotal || 600;\n\nlet delay = retryCount < 24 ? initialDelay : Math.min(initialDelay * Math.pow(2, retryCount - 24), maxDelay);\nlet newTotal = totalElapsed + delay;\n\nif (newTotal > maxTotal) {\n  $json.status = \"timeout\";\n  $json.error = \"Polling exceeded 10 minutes\";\n}\n\n$(\"Set Backoff Params\").item.json.retryCount = retryCount + 1;\n$(\"Set Backoff Params\").item.json.totalElapsed = newTotal;\nreturn {\n        json: {\n            message_id: $json.message_id,\n            conversation_id: $json.conversation_id,\n            waitTimeInSeconds: delay, // Pass the delay time in seconds\n            status: $json.status,\n        }\n    }"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -176,
        784
      ],
      "id": "32e740b5-4596-4602-bad9-a2da205a7440",
      "name": "Code"
    },
    {
      "parameters": {
        "content": "# Send message to Genie and wait for response",
        "height": 640,
        "width": 2140
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1856,
        304
      ],
      "id": "2615c30d-a8ef-4084-ad23-ab9f295bc8ec",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "93122887-fc3f-49b9-81ca-48217e4ba37a",
              "leftValue": "={{ $json.attachments[0].query }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        64,
        480
      ],
      "id": "bb745ed3-b5f4-491c-980c-d2f78f1c6204",
      "name": "Check response content",
      "notesInFlow": false
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "893e001f-7977-4631-9c86-f994677bd941",
              "leftValue": "={{ $json.status }}",
              "rightValue": "COMPLETED",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -400,
        592
      ],
      "id": "bb0a1565-4af0-4253-be07-ae3aee313362",
      "name": "Check response status",
      "notesInFlow": true,
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "content": "# Get result table and generate natural language response",
        "height": 640,
        "width": 780
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        0,
        0
      ],
      "id": "99e46807-bf8c-4054-9d89-28e5de7ea3cd",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "trigger": [
          "app_mention"
        ],
        "channelId": {
          "__rl": true,
          "value": "C0923GP1C7J",
          "mode": "list",
          "cachedResultName": "dbdemos-ai-bi-marketing-campaign-genie-space"
        },
        "options": {
          "resolveIds": true
        }
      },
      "type": "n8n-nodes-base.slackTrigger",
      "typeVersion": 1,
      "position": [
        -2784,
        784
      ],
      "id": "f6beadd4-d664-4c80-bef8-23b8545a3383",
      "name": "Receive Slack message",
      "webhookId": "5686c6f0-f248-4929-9e5a-d155c78eb667",
      "disabled": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f3ecba06-07a8-4e44-9496-8.852456e+11",
              "name": "space_id",
              "value": "01f0488564b11b5faa935a71e74cf52f",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2192,
        672
      ],
      "id": "4c64dc52-fb1f-4ea7-a226-0c00c2624f4c",
      "name": "Set Genie Space"
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "value": "genie_conversations",
          "mode": "list",
          "cachedResultName": "genie_conversations"
        },
        "table": {
          "__rl": true,
          "value": "slack_genie_conversations",
          "mode": "list",
          "cachedResultName": "slack_genie_conversations"
        },
        "where": {
          "values": [
            {
              "column": "thread_ts",
              "value": "={{ $('Set Slack Event').item.json.thread_ts }} ? {{ $('Set Slack Event').item.json.thread_ts }} : {{ $('Set Slack Event').item.json.event_ts }}"
            },
            {
              "column": "slack_channel",
              "value": "={{ $('Set Slack Event').item.json.channel_id }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -1728,
        672
      ],
      "id": "18d23740-e10f-459b-87df-63d3601a80b5",
      "name": "Select Existing Conversations",
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "CHO0qYgFxBAOP7u7",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "resource": "genie",
        "spaceId": "={{  $('Set Genie Space').item.json.space_id }}",
        "initialMessage": "={{ $('Slack Socket Mode Trigger').item.json.payload.blocks[0].elements[0].elements[1].text }}"
      },
      "type": "n8n-nodes-databricks.databricks",
      "typeVersion": 1,
      "position": [
        -1280,
        768
      ],
      "id": "64ebb659-10b0-4ddc-bf61-e94db6e6288a",
      "name": "Start Conversation",
      "credentials": {
        "databricks": {
          "id": "WmIVlVa4LVxl7kgl",
          "name": "Databricks account"
        }
      }
    },
    {
      "parameters": {
        "resource": "genie",
        "operation": "createMessage",
        "spaceId": "={{  $('Set Genie Space').item.json.space_id }}",
        "conversationId": "={{ $json.genie_conversation_id }}",
        "message": "={{ $('Slack Socket Mode Trigger').item.json.payload.blocks[0].elements[0].elements[1].text }}"
      },
      "type": "n8n-nodes-databricks.databricks",
      "typeVersion": 1,
      "position": [
        -1056,
        560
      ],
      "id": "ce3c17c0-6cc1-47a4-ae3d-cb790fc87c84",
      "name": "Create Message",
      "credentials": {
        "databricks": {
          "id": "WmIVlVa4LVxl7kgl",
          "name": "Databricks account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "-- Insert a new row for the specific slack_user_id with is_active set to true\nINSERT INTO databricks_postgres.genie_conversations.slack_genie_conversations (genie_conversation_id, slack_channel, slack_channel_resolved, thread_ts)\nVALUES ($1, $2, $3, $4);",
        "options": {
          "queryReplacement": "={{ $('Start Conversation').item.json.conversation_id }},{{ $('Set Slack Event').item.json.channel_id }} , {{ $('Set Slack Event').item.json.channel_name }},{{ $('Set Slack Event').item.json.event_ts }}"
        }
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -1056,
        768
      ],
      "id": "800d1bc6-3579-4e5e-a593-f5e44ca7d6b3",
      "name": "Insert Conversation ID for thread_ts",
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "CHO0qYgFxBAOP7u7",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "resource": "genie",
        "operation": "getMessage",
        "spaceId": "={{  $('Set Genie Space').item.json.space_id }}",
        "conversationId": "={{ $json.conversation_id }}\n",
        "messageId": "={{ $json.message_id }}"
      },
      "type": "n8n-nodes-databricks.databricks",
      "typeVersion": 1,
      "position": [
        -624,
        672
      ],
      "id": "1e82eeea-6d9e-4836-8546-c388c44f7fe7",
      "name": "Get Message",
      "credentials": {
        "databricks": {
          "id": "WmIVlVa4LVxl7kgl",
          "name": "Databricks account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "ab03d536-9d58-4afa-bdbe-0f103838d8bf",
              "name": "text",
              "value": "={{ $('Get Message').item.json.attachments[0].text.content }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        560,
        640
      ],
      "id": "61de01ed-ebbb-4885-af8d-86de88c6c7a5",
      "name": "Format text output",
      "notesInFlow": false
    },
    {
      "parameters": {
        "resource": "genie",
        "operation": "getQueryResults",
        "spaceId": "={{ $('Get Message').item.json.space_id }}",
        "conversationId": "={{ $('Get Message').item.json.conversation_id }}",
        "messageId": "={{ $('Get Message').item.json.message_id }}",
        "attachmentId": "={{ $('Get Message').item.json.attachments[0].attachment_id }}"
      },
      "type": "n8n-nodes-databricks.databricks",
      "typeVersion": 1,
      "position": [
        288,
        352
      ],
      "id": "7a206464-ecd0-4295-9aa8-de18ef4d5963",
      "name": "Get Query Results",
      "credentials": {
        "databricks": {
          "id": "WmIVlVa4LVxl7kgl",
          "name": "Databricks account"
        }
      }
    },
    {
      "parameters": {
        "model": "databricks-llama-4-maverick",
        "options": {}
      },
      "type": "n8n-nodes-databricks.lmChatDatabricks",
      "typeVersion": 1,
      "position": [
        592,
        464
      ],
      "id": "9da30ba3-b933-4499-8cfd-8e6525d5a952",
      "name": "Databricks Chat Model",
      "credentials": {
        "databricks": {
          "id": "WmIVlVa4LVxl7kgl",
          "name": "Databricks account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Answer this question based on the SQL query results (in JSON): \n- question: {{ $('Get Message').item.json.content }}\n- result description: {{ $('Get Message').item.json.attachments[0].query.description }}\n- result manifest: {{ $json.statement_response.manifest.toJsonString() }}\n- query result: {{ $json.statement_response.result.toJsonString() }}",
        "messages": {
          "messageValues": [
            {
              "message": "You are given a user question with supporting data and its description and data schema. Answer the user question using provided data and metadata in an easy to digest style. Don't respond with table, rather just summarize the insights that can be obtained in the table.\n\nIf result returned empty, reply that you didn't get a query result and therefore couldn't answer the question."
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.6,
      "position": [
        512,
        240
      ],
      "id": "6bd9e897-8a69-424f-9923-2b610695949e",
      "name": "Summarize query attachment",
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "cc83fad5-d1c3-4781-bc6a-68d0400b1b8a",
              "name": "text",
              "value": "={{ $json.text.replace(/^- /gm, \"* \").replaceAll(\"**\", \"*\") }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        864,
        592
      ],
      "id": "cba25009-2491-4a0f-9d8d-6750178eef19",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "select": "channel",
        "channelId": {
          "__rl": true,
          "value": "={{ $('Set Slack Event').item.json.channel_id }}",
          "mode": "id"
        },
        "text": "={{ $json.text }}",
        "otherOptions": {
          "includeLinkToWorkflow": false,
          "thread_ts": {
            "replyValues": {
              "thread_ts": "={{ $('Set Slack Event').item.json.event_ts }}"
            }
          },
          "mrkdwn": true
        }
      },
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.3,
      "position": [
        1088,
        480
      ],
      "id": "b730bf05-ff49-4c51-b52b-3f3bcc35d968",
      "name": "Send Genie response",
      "webhookId": "9b164ec1-f2d6-4ac0-a3da-fb6fb4130cad",
      "credentials": {
        "slackApi": {
          "id": "hnoYjfBoWzJ4cLPb",
          "name": "Slack account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "085142d9-6133-4792-8577-78277792bb08",
              "name": "message_id",
              "value": "={{ $('Start Conversation').item.json.message_id }}",
              "type": "string"
            },
            {
              "id": "c7d96883-8b10-4701-b1f7-f4088cb4597a",
              "name": "conversation_id",
              "value": "={{ $('Start Conversation').item.json.conversation_id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -848,
        768
      ],
      "id": "bc7b2f70-7ff1-42ee-ae49-e6229141afda",
      "name": "Set Fields for New Conversation"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "0b92233c-68cf-4a04-8dfe-0656b4e3c719",
              "name": "message_id",
              "value": "={{ $('Create Message').item.json.message_id }}",
              "type": "string"
            },
            {
              "id": "c28b52aa-bd71-4db1-8497-d0f67ed3060a",
              "name": "conversation_id",
              "value": "={{ $('Create Message').item.json.conversation_id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -848,
        560
      ],
      "id": "55f8e392-c321-4e6e-9f36-9494e14a5421",
      "name": "Set Fields for Existing Conversation"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "cc83fad5-d1c3-4781-bc6a-68d0400b1b8a",
              "name": "text",
              "value": "={{ $json.error.replace(/^- /gm, \"* \").replaceAll(\"**\", \"*\") }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        864,
        288
      ],
      "id": "08e0f580-4a13-4c1c-8c0e-b0aea80c77e0",
      "name": "Format Error Message"
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $json.isNotEmpty() }}",
              "value2": "={{ true }}"
            }
          ]
        }
      },
      "name": "Conversation Exists?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -1504,
        672
      ],
      "id": "a099aabf-1b07-44d7-8f89-dbc59206153c"
    },
    {
      "parameters": {
        "trigger": [
          "app_mention"
        ]
      },
      "type": "@mbakgun/n8n-nodes-slack-socket-mode.slackSocketTrigger",
      "typeVersion": 1,
      "position": [
        -2752,
        560
      ],
      "id": "db09f494-ef89-41d4-9fa4-ad70f1831ee3",
      "name": "Slack Socket Mode Trigger",
      "credentials": {
        "slackSocketCredentialsApi": {
          "id": "DA9k00L4jEZTLAAz",
          "name": "Slack Socket Mode Credentials account"
        }
      }
    },
    {
      "parameters": {
        "resource": "channel",
        "operation": "get",
        "channelId": {
          "__rl": true,
          "value": "={{ $json.body.event.channel }}",
          "mode": "id"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.3,
      "position": [
        -2592,
        560
      ],
      "id": "d362b1f9-b080-46a5-b31c-92f1ad25b4ab",
      "name": "Get a channel",
      "webhookId": "4e31b143-ef0b-4fa4-9a9a-3b9547da47ca",
      "credentials": {
        "slackApi": {
          "id": "hnoYjfBoWzJ4cLPb",
          "name": "Slack account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f3ecba06-07a8-4e44-9496-8.852456e+11",
              "name": "channel_id",
              "value": "={{ $json.id }}",
              "type": "string"
            },
            {
              "id": "01a3f4b9-0ad9-46f2-a25d-5a3672ed06ec",
              "name": "event_ts",
              "value": "={{ $('Slack Socket Mode Trigger').item.json.payload.event_ts }}",
              "type": "string"
            },
            {
              "id": "fa6be155-9886-4bf0-922c-7b727340c9df",
              "name": "thread_ts",
              "value": "={{ $('Slack Socket Mode Trigger').item.json.payload.thread_ts }} ? {{ $('Slack Socket Mode Trigger').item.json.payload.thread_ts }} : {{ null }}",
              "type": "string"
            },
            {
              "id": "a01aa187-6ae1-43f4-955f-90cf82a36d9b",
              "name": "channel_name",
              "value": "={{ $json.name }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2448,
        560
      ],
      "id": "fa8a7c3a-2d14-4ea9-8c50-0eaccec9b291",
      "name": "Set Slack Event"
    }
  ],
  "pinData": {
    "Slack Socket Mode Trigger": [
      {
        "json": {
          "body": {
            "token": "5IQJn1SSg7fDbeEoCPlJ0WAQ",
            "team_id": "T094KACVBE2",
            "api_app_id": "A094PLSPYPL",
            "event": {
              "user": "U094KAD0P5L",
              "type": "app_mention",
              "ts": "1754921718.478309",
              "client_msg_id": "76746295-c7b6-4450-afd1-f85499c6f4f5",
              "text": "<@U094RH9QJ84> this is a test",
              "team": "T094KACVBE2",
              "blocks": [
                {
                  "type": "rich_text",
                  "block_id": "15cLF",
                  "elements": [
                    {
                      "type": "rich_text_section",
                      "elements": [
                        {
                          "type": "user",
                          "user_id": "U094RH9QJ84"
                        },
                        {
                          "type": "text",
                          "text": " this is a test"
                        }
                      ]
                    }
                  ]
                }
              ],
              "channel": "C094KAMLXJS",
              "event_ts": "1754921718.478309"
            },
            "type": "event_callback",
            "event_id": "Ev099UCMG7DG",
            "event_time": 1754921718,
            "authorizations": [
              {
                "enterprise_id": null,
                "team_id": "T094KACVBE2",
                "user_id": "U094RH9QJ84",
                "is_bot": true,
                "is_enterprise_install": false
              }
            ],
            "is_ext_shared_channel": false,
            "event_context": "4-eyJldCI6ImFwcF9tZW50aW9uIiwidGlkIjoiVDA5NEtBQ1ZCRTIiLCJhaWQiOiJBMDk0UExTUFlQTCIsImNpZCI6IkMwOTRLQU1MWEpTIn0"
          },
          "payload": {
            "user": "U094KAD0P5L",
            "type": "app_mention",
            "ts": "1754921718.478309",
            "client_msg_id": "76746295-c7b6-4450-afd1-f85499c6f4f5",
            "text": "<@U094RH9QJ84> this is a test",
            "team": "T094KACVBE2",
            "blocks": [
              {
                "type": "rich_text",
                "block_id": "15cLF",
                "elements": [
                  {
                    "type": "rich_text_section",
                    "elements": [
                      {
                        "type": "user",
                        "user_id": "U094RH9QJ84"
                      },
                      {
                        "type": "text",
                        "text": " this is a test"
                      }
                    ]
                  }
                ]
              }
            ],
            "channel": "C094KAMLXJS",
            "event_ts": "1754921718.478309"
          },
          "context": {
            "isEnterpriseInstall": false,
            "botToken": "xoxb-9155352997478-9161587834276-aeqtSIwxFZxTmihEU5hsyBJ8",
            "botUserId": "U094RH9QJ84",
            "botId": "B094RH9Q97E",
            "userId": "U094KAD0P5L",
            "teamId": "T094KACVBE2",
            "retryNum": 0,
            "retryReason": ""
          },
          "event": {
            "user": "U094KAD0P5L",
            "type": "app_mention",
            "ts": "1754921718.478309",
            "client_msg_id": "76746295-c7b6-4450-afd1-f85499c6f4f5",
            "text": "<@U094RH9QJ84> this is a test",
            "team": "T094KACVBE2",
            "blocks": [
              {
                "type": "rich_text",
                "block_id": "15cLF",
                "elements": [
                  {
                    "type": "rich_text_section",
                    "elements": [
                      {
                        "type": "user",
                        "user_id": "U094RH9QJ84"
                      },
                      {
                        "type": "text",
                        "text": " this is a test"
                      }
                    ]
                  }
                ]
              }
            ],
            "channel": "C094KAMLXJS",
            "event_ts": "1754921718.478309"
          }
        }
      }
    ]
  },
  "connections": {
    "Check Timeout": {
      "main": [
        [
          {
            "node": "Wait Backoff",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get Query Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait Backoff": {
      "main": [
        [
          {
            "node": "Get Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Backoff Params": {
      "main": [
        [
          {
            "node": "Select Existing Conversations",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Check Timeout",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check response content": {
      "main": [
        [
          {
            "node": "Get Query Results",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Format text output",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check response status": {
      "main": [
        [
          {
            "node": "Check response content",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Receive Slack message": {
      "main": [
        [
          {
            "node": "Set Genie Space",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Genie Space": {
      "main": [
        [
          {
            "node": "Set Backoff Params",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Select Existing Conversations": {
      "main": [
        [
          {
            "node": "Conversation Exists?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Start Conversation": {
      "main": [
        [
          {
            "node": "Insert Conversation ID for thread_ts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Message": {
      "main": [
        [
          {
            "node": "Set Fields for Existing Conversation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert Conversation ID for thread_ts": {
      "main": [
        [
          {
            "node": "Set Fields for New Conversation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Message": {
      "main": [
        [
          {
            "node": "Check response status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format text output": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Query Results": {
      "main": [
        [
          {
            "node": "Summarize query attachment",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Databricks Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Summarize query attachment",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Summarize query attachment": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Format Error Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Send Genie response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Fields for New Conversation": {
      "main": [
        [
          {
            "node": "Get Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Fields for Existing Conversation": {
      "main": [
        [
          {
            "node": "Get Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Error Message": {
      "main": [
        [
          {
            "node": "Send Genie response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Conversation Exists?": {
      "main": [
        [
          {
            "node": "Create Message",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Start Conversation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Slack Socket Mode Trigger": {
      "main": [
        [
          {
            "node": "Get a channel",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get a channel": {
      "main": [
        [
          {
            "node": "Set Slack Event",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Slack Event": {
      "main": [
        [
          {
            "node": "Set Genie Space",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "6d2ec696-6103-4376-9f70-5ea536cc5583",
  "meta": {
    "instanceId": "18f2592c5f4dc237bb9cf68aba4b051594266d0ba71f1a32775856beee687965"
  },
  "id": "qbmGTD16hKTcD2C7",
  "tags": []
}